{{- if .Values.kibana.ingress.enabled }}
kind: ConfigMap
apiVersion: v1
metadata:
  name: kibana-nginx-configmap
  namespace: "{{ .Values.namespace }}"
  labels:
    app: kibana 
data:
  nginx.conf: |
    error_log stderr warn;
    worker_processes 1;
    events {
      worker_connections 100;
    }
    http {
      keepalive_timeout 5s;
      gzip on;
      gzip_proxied any;
      gzip_types text/plain text/xml text/css
                 text/comma-separated-values
                 text/javascript application/javascript
                 application/atom+xml application/json
                 image/svg+xml;
      log_format  custom  '"$request" '
          '$status $body_bytes_sent $request_time '
          '"$http_x_forwarded_for" '
          '"$http_user_agent" "$http_referer"';
      server {
        listen 8000;
        access_log /dev/stdout custom;
        client_max_body_size 0;
        chunked_transfer_encoding on;
        auth_basic "Restricted";
        auth_basic_user_file /htpasswd/auth;
        server_name           {{ .Values.kibana.host }};
          location / {
            proxy_pass          http://127.0.0.1:5601;
            proxy_set_header    Host $host;
          }
      }
    }
{{- end }}
