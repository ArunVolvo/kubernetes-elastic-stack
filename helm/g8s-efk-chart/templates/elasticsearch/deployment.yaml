apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: "{{ .Values.namespace }}"
  labels:
    app: elasticsearch
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releasetime: {{ $.Release.Time }}
      labels:
        app: elasticsearch
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: NotIn
                values:
                - master
{{- if .Values.elasticsearch.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.data.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.elasticsearch.tolerations }}
      tolerations:
{{ toYaml .Values.elasticsearch.tolerations | indent 8 }}
{{- end }}
      initContainers:
      - name: set-vm-max-map-count
        image: quay.io/giantswarm/busybox:1.28.3
        imagePullPolicy: IfNotPresent
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
        securityContext:
          privileged: true
      {{- if .Values.elasticsearch.persistence.enabled }}
      - name: volume-mount-hack
        image: quay.io/giantswarm/busybox:1.28.3
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      {{- end }}
      serviceAccountName: elasticsearch
      containers:
      - name: elasticsearch
        image: "{{ .Values.elasticsearch.image.repository }}:{{ .Values.elasticsearch.image.tag }}"
        imagePullPolicy: {{ .Values.elasticsearch.image.pullPolicy | quote }}
        env:
        - name: ES_JAVA_OPTS
          value: "-Djava.net.preferIPv4Stack=true -Xms4g -Xmx4g"
        ports:
        - containerPort: 9200
        livenessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 60
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 30
        resources:
{{ toYaml .Values.elasticsearch.resources | indent 12 }}
        volumeMounts:
        - name: config
          mountPath: /usr/share/elasticsearch/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: elasticsearch
      - name: elasticsearch-data
      {{- if .Values.elasticsearch.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.elasticsearch.persistence.pvcName | quote }}
      {{- else }}
        emptyDir: {}
      {{- end }}
